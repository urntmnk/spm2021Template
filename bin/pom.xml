<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>pros.unicam.it</groupId>
  <artifactId>spm2021</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>war</packaging>

  <name>webapp Maven Webapp</name>
  <!-- FIXME change it to the project's website -->
  <url>http://www.example.com</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    
    <junit.jupiter.version>5.3.2</junit.jupiter.version>
  </properties>

  <dependencies>
<!--  JUNIT5 -->

		<!-- JUnit5 dependencies: * junit-jupiter-api: for writing JUnit5 tests 
			* junit-jupiter-engine: for running JUnit5 tests * junit-platform-xxx: the 
			foundation for JUnit5 * (Optionally) you might want to include junit-vintage-engine 
			for running JUnit4 tests -->
			
		<!-- The junit-jupiter-api dependency allows us to write tests and extensions which use JUnit 5. -->
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<version>${junit.jupiter.version}</version>
			<scope>test</scope>
		</dependency>
		
		<!-- The junit-jupiter-params dependency allows us to write parameterized tests which use JUnit 5. -->
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-params</artifactId>
			<version>${junit.jupiter.version}</version>
			<scope>test</scope>
		</dependency>
		
		<!-- The junit-jupiter-engine dependency allows us to run tests which use JUnit 5. -->
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<version>${junit.jupiter.version}</version>
			<scope>test</scope>
		</dependency>
		
		<!-- The junit-vintage-engine dependency allows us to run tests which use JUnit 3 or 4. -->
		<!--<dependency>
			<groupId>org.junit.vintage</groupId>
			<artifactId>junit-vintage-engine</artifactId>
			<version>${junit.jupiter.version}</version>-->
			<!--<scope>test</scope>-->
		<!--</dependency> -->
		
		<!-- Public API for configuring and launching test plans — typically used by IDEs and build tools. -->
		<!-- https://mvnrepository.com/artifact/org.junit.platform/junit-platform-launcher -->
		<dependency>
		    <groupId>org.junit.platform</groupId>
		    <artifactId>junit-platform-launcher</artifactId>
		    <version>1.3.2</version>
		    <scope>test</scope>
		</dependency>
		
		<!-- Runner for executing tests and test suites on the JUnit Platform in a JUnit 4 environment. -->
		<!-- https://mvnrepository.com/artifact/org.junit.platform/junit-platform-runner -->
		<dependency>
		    <groupId>org.junit.platform</groupId>
		    <artifactId>junit-platform-runner</artifactId>
		    <version>1.3.2</version>
		    <scope>test</scope>
		</dependency>
		
		<!--  Annotations for configuring test suites on the JUnit Platform. -->
		<!-- https://mvnrepository.com/artifact/org.junit.platform/junit-platform-suite-api -->
		<dependency>
		    <groupId>org.junit.platform</groupId>
		    <artifactId>junit-platform-suite-api</artifactId>
		    <version>1.3.2</version>
		    <scope>test</scope>
		</dependency>		
		
		    <!-- https://mvnrepository.com/artifact/org.json/json -->
	<dependency>
	    <groupId>org.json</groupId>
	    <artifactId>json</artifactId>
	    <version>20200518</version>
	</dependency>	
 
 <!-- Selenium-->
	<!-- https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-java -->
<dependency>
    <groupId>org.seleniumhq.selenium</groupId>
    <artifactId>selenium-java</artifactId>
    <version>3.141.59</version>
</dependency>
	
<!-- Rest Assured -->
<!-- https://mvnrepository.com/artifact/io.rest-assured/rest-assured -->
<dependency>
    <groupId>io.rest-assured</groupId>
    <artifactId>rest-assured</artifactId>
    <version>4.3.2</version>
    <scope>test</scope>
</dependency>

<!-- htmlunit-driver -->
<!-- https://mvnrepository.com/artifact/org.seleniumhq.selenium/htmlunit-driver -->
<dependency>
    <groupId>org.seleniumhq.selenium</groupId>
    <artifactId>htmlunit-driver</artifactId>
    <version>2.45.0</version>
</dependency>

<!-- phantomjsdriver -->
<!-- https://mvnrepository.com/artifact/com.codeborne/phantomjsdriver -->
<dependency>
    <groupId>com.codeborne</groupId>
    <artifactId>phantomjsdriver</artifactId>
    <version>1.4.4</version>
</dependency>
  </dependencies>

  <build>
    <finalName>spm2021</finalName>
    <pluginManagement><!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) -->
      <plugins>
       <plugin>            
		  <groupId>org.apache.maven.plugins</groupId>
		  <artifactId>maven-war-plugin</artifactId>
		  <version>3.2.2</version>
		  <configuration>
	        <failOnMissingWebXml>false</failOnMissingWebXml>
	      </configuration>
		</plugin>
        <!-- clean lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#clean_Lifecycle -->
        <plugin>
          <artifactId>maven-clean-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>
        <!-- default lifecycle, jar packaging: see https://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_jar_packaging -->
        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.0.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.8.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.22.1</version>        
        </plugin>
               <!-- -DexcludedGroups=AcceptanceTest surefire:test  -->
        <plugin>
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.0.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-install-plugin</artifactId>
          <version>2.5.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>2.8.2</version>
        </plugin>
        <!-- site lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#site_Lifecycle -->
        <plugin>
          <artifactId>maven-site-plugin</artifactId>
          <version>3.7.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-project-info-reports-plugin</artifactId>
          <version>3.0.0</version>
        </plugin>
        
       <!-- Configure the Tomcat Maven plugin -->
			<plugin>
				<groupId>org.apache.tomcat.maven</groupId>
				<artifactId>tomcat7-maven-plugin</artifactId>
				<version>2.2</version>
				<configuration>
					<!-- Use tomcat9 Deploy app here server Values in tags and step 2 maven In the configuration file id Value consistent-->
				    <!-- <url>http://localhost:8080/manager/text</url> -->
					<username>tomcat</username>
					<password>tomcat</password>
					<update>true</update>
				</configuration>
			</plugin> 
			
			<plugin>
			<groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <version>0.6.0.201210061924</version>
            <executions>
                <execution>
                    <id>jacoco-initialize</id>
                    <goals>
                        <goal>prepare-agent</goal>
                    </goals>
                </execution>
                <execution>
                    <id>jacoco-site</id>
                    <phase>test</phase>
                    <goals>
                        <goal>report</goal>
                    </goals>
                </execution>
            </executions>     
            </plugin>  
      </plugins>
    </pluginManagement>
  </build>
</project>
